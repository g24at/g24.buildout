Status
------

A bit more than half of what is described in the PLIP is completed and
looks good.  There are some significant performance impacts that are
worrying.  I also have some questions about the queryparser module,
some loss in configurability and/or duplications of effort, and some
other notes below in "Findings".

It seems like there's a not insignificant amount of work to be done
before I'd vote +1 on including it but I also think that the
implementer could do the work if they have the time. 

Review Process
--------------

- bin/buildout -vN -c plips/plip9352-*.cfg
- Ran tests, generated a diff against failures from plipbase.cfg

- search for "welcome" as Manager and Anonymous
- description not left aligned with title
- path displays on search results
- sorting works
- searched in the current section, no display

- review the funkload load tests
- review the branch diff

Findings
--------

- performance impact

http://weblion.psu.edu/static/loadtesting/plone4.0/diff_ContentCreation-20090909T_185510-plip9352-public_vs_194120-plipbase-public/
http://weblion.psu.edu/static/loadtesting/plone4.0/diff_ContentCreation-20090909T_185510-plip9352-public_vs_202214-plipbase-public-wo-search/
http://weblion.psu.edu/static/loadtesting/plone4.0/diff_ReadOnly_20090909T190614-plip9352-public_vs_20090911T154327-plipbase/
http://weblion.psu.edu/static/loadtesting/plone4.0/diff_ReadOnly_20090910T203725-plip9352-search-results_vs_20090911T154327-plipbase/

This plip doesn't seem to have any overall significant impact on the
ReadOnly test which includes one search results request.  Drilling
down to the results for that one search results request, however, the
impact seems much more significant:

http://weblion.psu.edu/static/loadtesting/plone4.0/test_ReadOnly-20090910T203725-plip9352-search-results/index.html#page-006-get-coreloadtests-search-type-page
http://weblion.psu.edu/static/loadtesting/plone4.0/test_ReadOnly-20090911T154327-plipbase/index.html#page-006-get-coreloadtests-search-type-page

Specifically, it seems to double the response times at low levels of
concurrency.  As concurrency increases, it has less of an effect on
the response times, but this is probably just because the
multi-threading overhead is becomming more significant since there's
no reason to think that higher concurrency would improve the
performance of the search results page.  Since the default zope.conf
uses 4 threads and david's ab tests used "-n 100" I'm guessing he
didn't really see the penalty without being obscured by threading
overhead.

I've re-run the load tests and things look much better but still
worrying.  The problem is still nearly two-fold at low concurrency:

http://weblion.psu.edu/static/loadtesting/plone4.0/test_ReadOnly-20090916T104047-plip9352-search-results/index.html#page-006-get-coreloadtests-search-type-page
http://weblion.psu.edu/static/loadtesting/plone4.0/test_ReadOnly-20090916T064300-plipbase/index.html#page-006-get-coreloadtests-search-type-page

This level of performance impact is definitely worrying.  If it
weren't addressed, I'd have to be a strong -1 on this, but I'll bet it
can be addressed with the aid of some proper profiling.

- Noisiness

I like having the path in the search listing but to me at least it
adds noise without immediately calling out it's meaning if it has the
same color.  Perhaps it should use green as the PLIP description
suggests?

- queryparser

I don't understand the need for the query parser stuff.  It seems to
operate on self.request.get('query', None), but I can't find where
'query' is set except in the collectiontest.pt and
prototype/index.html.  Can you elucidate?

- spurious comments

I see that some lines are just commented out in
Products/CMFPlone/setuphandlers.py.  I'm guessing they should be
removed?  It seems to be related to the item added to
Plone/docs/NEWS.txt as well.  This should probably be straightened
out.

I also see a XXX comment in plone/app/search/search.pt.

- Search only in current section

I don't see anything on the search results when searching in the
current section.  Was this task abandoned?

- Left align the description with the title

I don't see the description left aligned with the title.  Was this
task abandoned?

- configurable

It sure would be nice to make the sort selections configurable by site
admins.

I also note that config.py seems to reproduce much of what is
currently configurable in the "Collections" control panel but in a way
that isn't configurable by site admins.  This definitely seems like a
step backwards.  Can you elaborate on this at all?  Unless there's a
win here, I'd want to see the existing support re-used before I gave a
+1.

- To do's in plip9352-search-results.txt

What is the status on the To do's listed there?

- relevance

Since we're removing the relevance from the search results, and this
is the only place I know of that uses the math done in
ZCatalog.Catalog.Catalog.search.getScoredResult, I wonder if some
performance gain might be gotten by removing the normalization.  Keep
in mind, the sorting by relevance is done on the un-normalized score
so nothing would be lost there.
