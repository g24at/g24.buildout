PLIP 9214: Support logins using e-mail address instead of user id
=================================================================

This plip is ready for review.

Plip ticket: https://dev.plone.org/plone/ticket/9214


Branches made
-------------

http://dev.plone.org/plone/browser/Plone/branches/plip9214-emaillogins
http://dev.plone.org/collective/browser/Products.PasswordResetTool/branches/plip9214-emaillogins
http://dev.plone.org/plone/browser/plone.app.portlets/branches/plip9214-emaillogins
http://dev.plone.org/plone/browser/plone.app.controlpanel/branches/plip9214-emaillogins


Summary of changes
------------------

- Basically the patches from
  http://svn.plone.org/svn/collective/collective.emaillogin/trunk have
  been merged.

- Added site_properties/use_email_as_login; default False.
  This can be set in the security control panel.

- Independent from the use_email_as_login setting we allow the '@'
  sign in login names.  See _ALLOWED_MEMBER_ID_PATTERN in
  Products/CMFPlone/RegistrationTool.py (and see the Alternatives
  section below).

- When use_email_as_login is true:

  - join form: user name field is not shown

  - join_form_validate.vpy: the filled in email address is added to
    the request as username: context.REQUEST.set('username', email)
    which means this address will be used as the user name and login
    name of the new member.

  - personalize.cpy calls Products.CMFPlone.utils:set_own_login_name
    to change the login name when the email address is changed.  Note
    that the user id never changes, so this is always the same as the
    initial email address.

  - Various labels and error messages are slightly changed, e.g. the
    login form and portlet do not show user name but e-mail.

  - Various methods in PasswordResetTool get the user by login name
    instead of user id.  If you have changed your email address a
    couple of times, then PasswordResetTool can handle requests from
    the first (which is the user id) and the last (which is the
    current login name).

- Note that when the use_email_as_login property is changed, whatever
  the login name of a user is at that moment stays his login name.  So
  if you turn it on, a user is created, and you turn it off again,
  then on the login form that user is asked for his login name and he
  must fill in his email address there as that is currently his login
  name.

- Note that when an admin on the root zope level logs into Plone and
  changes his password on his personalize_form, this has NO effect on
  his login name.  We could do that, but it seems safer to not touch
  such a user.


To do
-----

- Migration for older sites: add the use_email_as_login property.  This
  should be simple to add, but I will wait until I have green light on
  the implementation of this plip.


Tests
-----

The relevant tests are in CMFPlone/tests/testEmailLogin.py and
CMFPlone/tests/emaillogin.txt (browser tests).  Both can be tested by
running:

  bin/test -s Products.CMFPlone -m testEmailLogin

It is good to run all other tests as well of course, but of the most
interest will be these:

  bin/test -s Products.CMFPlone -m testRegistrationTool
  bin/test -s Products.PasswordResetTool

and perhaps:

  bin/test -s plone.app.controlpanel
  bin/test -s plone.app.portlets

The changes in PasswordResetTool are so light that no extra tests in
this package are needed I think; password resetting is tested in the
aforementioned CMFPlone/tests/emaillogin.txt.  Same goes for
plone.app.controlpanel and plone.app.portlets.

It may be interesting to temporarily turn on the use_email_as_login
property in propertiestool.xml and run some or all tests again to see
if any tests fail unexpectedly.  Of course some will certainly fail,
like browser tests that try to register a new user and try to fill in
a user name in a now non-existing input field.


Needed documentation changes
----------------------------

Documentation should describe this feature.  Something like this:

You can now allow users to use their email address as login name.
This feature can be switched on in the Security settings control
panel.  The effect is that on the registration form no field is shown
for the user name.  On the login form the user is now asked to fill in
an email address.

Enabling this on a website that already has users may be confusing for
those users.  When logging in they will be asked for their email
address, but these existing users should actually still login with the
login name they have chosen.


i18n
----

Several strings have been added or have been changed to better reflect
the new situation where you register and login with your email address.


Backwards compatibility
-----------------------

The default setting is to *not* use the email address as the login
name, so the default behaviour is the same as in previous Plone
versions.  The exception is that '@' signs are now always allowed in
login names.  (Of course this is my hidden agenda for this plip: allow
myself to pick 'm@urits' as login name. ;-))


Alternatives
------------

- We now change the default member ID pattern in RegistrationTool from
  "^[A-Za-z][A-Za-z0-9_]*$" (CMFCore) to r'^\w[\w\.\-@]+[a-zA-Z]$'
  (CMFPlone).  This has worked fine in a customer site for one and a
  half years.  But we could keep the default and instead update the
  _ALLOWED_MEMBER_ID_PATTERN when the use_email_as_login property is
  changed.  That is what happens when you edit the configure tab of
  portal_registration in the ZMI.  We can use the EMAIL_RE pattern
  that Plone's RegistrationTool is already importing from
  SecureMailHost.

- You can grep for PLIP9214 in Products/CMFPlone/RegistrationTool.py
  for a few spots where an extra opinion is especially welcome.


Further ideas
-------------

Related ideas that may be nice to incorporate into this plip.

- Make email address case insensitive: you should always use lower
  case.

- In places where user ids are shown ('last modified by a@b.c') avoid
  showing the complete email address; perhaps just show the part
  before the '@' sign.  Also see plip 9305: Use real names instead of
  usernames.

- Offer migration of current login names to email addresses.

- Offer a check to see if in the current users there are duplicate
  email addresses.

- When 'Enable User Folders' is selected, you end up with user
  folders with ids like this, which is ugly:
  Members/email-40address.org.  We could improve that.  But it may
  just be that the combination of these two options does not make much
  sense.

- If you change your email address, you can no longer login with your
  original email address, though that is still your user id.  A user
  created before use_email_as_login was switched on can only login
  with his original login name until the first time that he saves his
  personalize_form.  After that he needs his current email address.
  We could allow the user id to be used for login as well.  I thought
  I had that working with the collective.emaillogin package, but
  apparently not.  It can be done if we want this.  It would need a
  change in PluggableAuthService.py in the _verifyUser method;
  basically doing a second pass over that function with the passed
  login name used as user_id instead.


Credits
-------

Maurits van Rees


Changes after first review round
--------------------------------

- Checked the Unauthorized error on isMemberIdAllowed reported by
  davisagli.  There are tests for this and they still pass.
  isMemberIdAllowed is protected by the AddPortalMember permission.  I
  can only reproduce the exception by first adding a user and then
  switching off self-registration.  Hm, we can at least catch the
  exception; okay, doing that now and showing this error instead when
  someone tries to change his email address but he is not authorized
  for isMemberIdAllowed:

  Sorry, you are not allowed to change your email address.

  Changed in r30007.

- plone.app.openid: David noted that the login form needed to be
  updated here as well.  Actually, plone.app.openid needs to be fixed
  anyway, because the templates give errors in Plone 4 since the
  global defines are no longer there.  The standard Plone 4.0 uses
  branch 1.1 but I copied trunk to a new branch as nothing in the
  trunk changelog pointed to drastic changes.
  The changes on that branch related to this plip are done in r30017.

- Added migration to add the use_email_as_login=False property in
  a plone.app.upgrade branch for this plip.  See r30022.

- Added @@migrate-to-emaillogin browser view so admins can update the
  login names of existing users.  It can check for duplicate emails
  and can update the login name of all users to their email addresses
  or back to their user ids.

  I first added this to Products.CMFPlone.browser, but then moved it
  to plone.app.controlpanel.

  Note that I point to this page from the security settings panel, but
  we cannot easily add html there, so it is not a real link.

  Should at least be fine for the basic use case.
