PLIP 9249: Add TinyMCE as the default visual editor
===================================================

PLIP ticket: http://dev.plone.org/plone/ticket/9249

Review #1 by David Glick (dglick@gmail.com, davisagli on irc)

The PLIP was reviewed on Mac OS X 10.6 using python 2.6 and Firefox 3.5.2.

Review steps
------------

- Run buildout with the plip9249-tinymce.cfg file.

- TTW testing of functionality and comparison of features to kupu.

- Visual review of the Products.TinyMCE package.

- Ran tests for Products.TinyMCE and kupu.

- Ran coverage report of Products.TinyMCE.

- Compared size of downloaded resources for both editors using Firebug's net panel.


TinyMCE plip review notes
-------------------------

- In a fresh Plone site my editor is correctly set to "Use site default", which
  means TinyMCE.  (pending Rob's fix for the default_editor property).  However
  we need to be able to configure the default editor via a configlet somewhere.

- Migration from older Plones needs to be handled.  I migrated a site from Plone
  2.5, and TinyMCE is not installed (I would expect it to be installed but not
  the default, I think).  I can't even install it manually since it is hidden
  from the quick installer.  We will also need migration code to set the
  default editor property correctly, and probably an optional script to change
  the setting to "use site default" for individual existing users.

- The TinyMCE configlet should be moved to the "Plone Configuration" section
  and be called "TinyMCE Visual Editor".  Kupu's configlet should be renamed
  to "Kupu Visual Editor" and be moved to the "Add-on" section.

- The TinyMCE profiles need to be hidden from the Plone site add form.

- In testing functionality of the editor itself, I was unable to successfully
  create a definition list.

- kupu features that have been duplicated (which is a good thing):
  - configuration for the styles dropdown
  - link by uid
  - image captioning
  - configuration of resource types

- Additional features compared to kupu:
  - a single dialog for inserting both internal and external links
  - better support for editing tables (not sure this should be enabled OOTB though, it clutters things)
  - auto-resize and height/width options
  - toolbar button configuration
  - external toolbar option (floats at top of page)
  - RTL support
  - custom editor CSS option
  - option to prevent users from linking content elsewhere in the site
  - option for how character entities are encoded

- Overall the code is pleasantly concise and readable, and follows modern
  Zope 3 approaches.

- Products.TinyMCE depends on z3c.json.  Plone already ships with simplejson.
  And Python 2.6 actually has a json module built in.  It would be nice to
  avoid adding an unneeded dependency; is there a reason z3c.json is used?

- kupu has suffered somewhat since very few people have any idea how to
  maintain and compile its XML.  To avoid a similar situation with TinyMCE,
  I would like to see a document describing the process of updating
  Products.TinyMCE for a new tinymce release, at least at a high level.

- The package contains a number of lines of Python ending with semicolons.  WTF?

- getBreadcrums is misspelled; should be getBreadcrumbs

- Products.TinyMCE.adapters.JSONDetails - the code for getting anchors should
  probably use the primary field, not assume the field is called 'text'

- Why does IJSONFolderListing need a getInfoFromBrain method, when all the
  needed info is already available directly from the brain?

- Products.TinyMCE.adapters.Upload - the upload function here doesn't do a very
  good job at separation of concerns -- it does a lot and would be hard to
  replace if different functionality were required, such as creating non-AT
  content.  One thing that would help a bit is adapting the new item to the dublin
  core interface from CMF before setting its title and description, instead
  of trying setTitle and setDescription before falling back to a simple
  attribute.

- Overall though the product does a pretty good job of abstracting into
  adapters the bits of functionality that are AT-specific.  One exception is
  the handling of the link by uid feature, but I'm not sure how that could
  be implemented without having one sort of uid for all content.

- The package uses KSS only for the initialization of the editor during inline
  editing.  Ideally this would not require KSS and at some point we'll need to
  make it not be, but it's not a regression from kupu.

- Uninstallation code is included.

- i18n for a large number of locales is included.

- The code in exportimport.py includes a dictionary of attributes that appears
  to duplicate much of the schema information that is included in interfaces/
  utility.py ... is it necessary to have both, and keep the default values
  in synch to have consistency between GS and TTW configuration?

- TinyMCE achieves its captioning and link by UID features by a mechanism similar
  to kupu (adding a custom mimetype to the text/x-safe-html output transform policy,
  and doing transformations during conversion to that mimetype).  At the moment
  its behavior is very very close to kupu's, but if kupu's behavior diverges,
  that could cause problems in the future (since TinyMCE's transform replaces
  kupu's, afaict.)  This is already a source of confusion that probably needs
  to be addressed during the merge, since TinyMCE's transform is based on settings
  in the TinyMCE utility, but also applies to content edited with kupu (in a site
  where both editors are in use), meaning there are some settings in the kupu
  configlet which no longer have any effect anywhere.

- It would be nice if the captioning transform used a template to render the
  captioned image (as kupu does), instead of hardcoding HTML into the Python.

- Test coverage is patchy and I would like to see it improved.

- I am using Products.TinyMCE in production and while there have been a few
  glitches, Rob Gietema and co. have been quite responsive in fixing them.
  Martin Aspeli also commented, "We're using Products.TinyMCE in a production
  build now (from trunk) and save for a few bugs I've found and fixed with Rob's
  help, it's been really great. I feel much less nervous about giving it to
  users than I did Kupu on my last project."

- Loading all resources for the edit page for the front-page weighs 704kB
  with only the tinymce scripts/CSS enabled; vs. 629kB with only the kupu
  scripts/CSS enabled.  However, I only disabled resources with 'tinymce' or
  'kupu' explicitly in the name, so this may not be entirely accurate.


Conclusion
----------

Switching visual editors goes right to the heart of editing content online
for most users, and so I would guess we'll have to iron out some wrinkles
if this PLIP is accepted and merged.  However, I think it's a strategic
move, given the current positions of kupu and TinyMCE, and I think the work
and commitment to maintaining this package demonstrated so far bodes well.

As described in the notes above, there are a number of things in the code
that should probably be cleaned up.  However, I don't think any of them are
blockers for inclusion in 4.0, with the exception of making sure coexisting
with kupu doesn't get too confusing.

My FWT vote: +1.

Update, 9/29/2009
=================

Progress has been made on most of the minor issues I noted. The following
somewhat troubling issues remain, as far as I can tell:

* The upgrade issues I mentioned in my initial review have not been addressed.
* The kupu and tinymce transforms still clobber each other if you have both
  editors installed and try to enable link-by-uid or captioning in both
  editors' preferences.  Ideally, the transform part of these features would be
  factored out into a separate package that would be used by both kupu and
  tinymce.  I'm willing to consider other suggestions.  At the very least,
  providing an informative message to the manager when this happens seems
  essential.

I guess I am +0.5 for merge.  Overall this is great, but these issues absolutely
need to be dealt with if this PLIP is to be included and feel well integrated
with a Plone release that also still includes kupu.
