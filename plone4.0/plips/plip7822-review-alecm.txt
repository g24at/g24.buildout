Summary
=================

This PLIP adds two new content types to Plone which mimic the existing
ATFile and ATImage content types, but use new ZODB 3.8 BLOB storage
features to store files directly on the filesystem.  The
implementation is straightforward and consists of a single Archetypes
content class providing BLOB support with sub-typing via adapters and
archetypes.schemaextender allowing it to provide compatibility with
the existing Image and File types.  The implementation appears to be
solid, and the product is in fairly wide production use under Plone
3.x.  Users of the product seem to speak favorably of it.

There are however, a number of issues with the current PLIP
implementation which would likely preclude it from being included with
Plone 4.0 unless addressed:

1) The implementer has failed to include a document describing the
   PLIP along with the buildout.

2) plone.app.blob tests do not pass under Plone 4.0 + Zope 2.12,
   though they appear to be well designed and offer reasonable
   coverage.

3) The Plone default profile has not been updated to install the BLOB
   content types by default.  It's not clear whether this is desirable
   or not, but it's also not clear what the purpose of shipping with
   BLOB support would be if we don't make the BLOB types available.

4) The BLOB Image type install profile does not appear in the Quick
   Installer.

5) Two BLOB File replacement install profiles appear in portal_setup

6) The tests (which again don't pass) depend on
   collective.monkeypatcher, but the buildout does not.

7) The product relies on monkeypatching (ZODB.Blob and
   ZPublisher.HTTPRequest).  These patches should be integrated into
   the Zope core if we are going to include this product.

8) The product depends on plone.app.imaging which monkeypatches
   Archetypes.Field.ImageField, this patch should be integrated if
   possible.

Issues and Concerns
==========================

Beyond the issues above which are not fundamental and are primarily
issues with the integration of this well-regarded existing product
into Plone 4.0, there are a few more fundamental concerns:

1) Performance: When serving a small image (600 B) I can get ~108
   req/sec with ATFile, but only ~80 req/sec with a BLOB File.
   Serving small files is not the primary purpose of this product, but
   chances are a large number of the images and files in a Plone site
   will be small to medium sized and performance should not be
   significantly worse than the status quo.  This is mitigated to some
   extent by the high cacheability of files and images, but if proxy
   caching is the answer to file performance problems, then it's not
   clear where BLOB storage fits in the picture.  For a larger file
   (6.1 MB mp3) ATFile managed 2.6 req/sec vs. 4.4 req/sec for BLOB
   file.  I would expect performance to increase further as file sizes
   increase.

2) If versioning is enabled for Files, reverting to another version
   removes the file content.

3) The package depends on archetypes.schemaextender, which is a
   worthwhile add-on package in wide use.  However, the package
   introduces a significant potential decrease in performance (see
   PLIP #9376 and reviews).

4) Image scales appear to be generated on the fly and not stored
   anywhere.  This is sub-optimal from a performance perspective.  The
   '/image_thumb' from a 38.4 kB ATImage allowed 128 req/sec the same
   request for the same image from a BLOB Image allowed only 41
   req/sec.  I would expect performance for scales of larger images to
   get much worse for BLOB Image, while remaining the same for
   ATImage.  I don't believe it is necessary to store the (generally
   small) scales in BLOBs if that proves difficult.  As noted above,
   serving small images directly from ZODB is faster than retrieval
   from BLOB storage.

With some work to properly integrate this package into Plone 4.0 and
some further discussion of the potential problems listed above, I
would strongly consider recommending this PLIP for inclusion in Plone.
It provides significant benefits for large file storage within Plone.

The above issues have been addressed or explained.  There seem to
still be a few failing tests in plone.app.blob and Products.CMFPlone.
Additionally, there are a few minor issues remaining as noted in in
the PLIP comments.  In it's current state I feel it is suitable for an
alpha/beta release of Plone 4.0.

+0.5
