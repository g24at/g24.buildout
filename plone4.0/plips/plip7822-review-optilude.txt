PLIP 7822: BLOB support
=======================

PLIP ticket: http://dev.plone.org/plone/ticket/7822

Review #2 by Martin Aspeli (non-FWT guest reviewer)

The PLIP was reviewed on Mac OS X 10.5 using python 2.6 and Firefox 3.5.2.

Review steps
------------

- Run tests

- Test TTW

- Read code

Notes and observations
----------------------

* I am using this in production (from trunk, with Plone 3.3), and it works
  well. I've also had an opportunity to test bulk import with Zope's FTP
  handler, and it worked flawlessly.
  
* There is serious attention to migration, which is good to see.

* The tests are still broken on Plone 4. That needs to be fixed, obviously.
  I'm pretty sure they pass on Plone 3.3, though.
  
* We should make BLOB files and images the default for non-migrated sites.

* The "plone.app.blob: Add Blob" permission needs to be granted to
  Owner, Manager, Contributor by default. It's not entirely clear how this
  relates to the "ATContentTypes: Add Image" and "ATContentTypes: Add File" 
  permissions. I think ideally, we shouldn't have special permissions for
  blobs, but if we do, we need to document how these three permissions
  relate.
  
* The "w/o blobs" types appear in the "types" control panel. They shouldn't
  by default.

* I installed plone.app.blob, and turned on automatic versioning. I then
  uploaded a file. It suceeded, but I got this in the logs:
  
  Exception OSError: (2, 'No such file or directory', '/var/folders/CS/CSVVQU2TGaiQYSKA+4-NNE+++TI/-Tmp-/tmpsUGy_l') in <bound method _TemporaryFileWrapper.__del__ of <closed file '<fdopen>', mode 'w+b' at 0x32f1de0>> ignored

* The versioning bug is still there (see Alec's notes)

* I uploaded an image, then used the transform tab to rotate it 90 degrees.
  This caused an error:
  
      Traceback (innermost last):
      Module ZPublisher.Publish, line 127, in publish
      Module ZPublisher.mapply, line 77, in mapply
      Module ZPublisher.Publish, line 47, in call_object
      Module Products.ATContentTypes.lib.imagetransform, line 185, in transformImage
    ValueError: invalid literal for int() with base 10: 'GET'

* For migrated sites, we should make it opt-in to migrate to BLOB types.

Alec has already conducted a detailed review, and I won't repeat everything
he's raised. To address a couple of his points though:

    6) The tests (which again don't pass) depend on
       collective.monkeypatcher, but the buildout does not.

 -> I took the liberty of fixing this with a 'tests' extra
 
    7) The product relies on monkeypatching (ZODB.Blob and
       ZPublisher.HTTPRequest).  These patches should be integrated into
       the Zope core if we are going to include this product.

 -> +1, but for me it's not a showstopper if this can't be co-ordinated.

    8) The product depends on plone.app.imaging which monkeypatches
       Archetypes.Field.ImageField, this patch should be integrated if
       possible.
 
 -> +1
 
    1) Performance: When serving a small image (600 B) I can get ~108
       req/sec with ATFile, but only ~80 req/sec with a BLOB File.

 -> Whilst this is worrying, 80 req/sec is far more than what we get for
    any other page in Plone, and as Alec points out, a caching proxy should
    take care of small files well anyway. It'd be good to find a way to
    improve this, but to my mind, 80 req/sec is more than good enough for
    out-of-the-box performance for small files, whereas the serving of
    non-blob files for *large* files is not good enough currently, and scales
    poorly.

    3) The package depends on archetypes.schemaextender, which is a
       worthwhile add-on package in wide use.  However, the package
       introduces a significant potential decrease in performance (see
       PLIP #9376 and reviews).

 -> I believe this has since been fixed, which is good to see.
 
    4) Image scales appear to be generated on the fly and not stored
       anywhere.  This is sub-optimal from a performance perspective.

 -> +1 to storing scales (even if they're not stored in blobs).

Conclusion
----------

I think this is very important functionality and something Plone should 
come with by default. There clearly are risks, and we should expect that this
will cause some edge cases to break, which we'll need to commit to fixing
where appropriate. However, out-of-the-box BLOB support is precisely the kind
of "headline" feature that Plone 4 should have. It's the right thing to use
for most sites, and is vital for anybody that plans to store big files in
Plone.

In my opinion, before this can be finally merged:

 - The tests need to be fixed.
 - The issue with CMFEditions roll-back needs to be fixed
 - It'd be good, but not crucial, to fix the image scale generation

Upon merging:
 
 - We should make BLOB types the default for both files and images.
 - The plone.app.blob/imaging extension profiles should be hidden when
   creating a new site
 - We should continue to look for opportunities to optimise small files.


My non-FWT vote: +1 contingent on tests + bugs discovered being fixed.