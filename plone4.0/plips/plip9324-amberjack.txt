PLIP 9324: Use Amberjack to offer guided help for first-time users
==================================================================

This plip is in progress.

Plip ticket: https://dev.plone.org/plone/ticket/9324

We have the following eggs:

- collective.amberjack.core contains amberjack javascript library, skins...
- collective.amberjack.portlet contains portlet to launch tours
- collective.amberjack.plonetour contains 12 basic tours

collective.amberjack.metatour (allow you to create a tour TTW) is not part of this PLIP.
Products.DataGridField is a dependency of collective.amberjack.metatour,
so it's not included in this PLIP as well.


How to test
-----------
- install Amberjack and Amberjack tour launcher.
- go to home
- click on the first tour on the right portlet


Automated tests
---------------
bin/instance test -s collective.amberjack.core


To do
-----

- Add an option to the Unified Installer, something like "./install.sh --with-tours".
  What it should do is creating the buildout.cfg with the following:

    [buildout]
    eggs =
        Plone
        collective.amberjack.core
        collective.amberjack.plonetour
        collective.amberjack.portlet

    [unifiedinstaller]
    ...
    run-profile =
        profile-collective.amberjack.core:default
        profile-collective.amberjack.portlet:default

- Add a run-profile option to plone.recipe.unifiedinstaller to run additional profiles
  when the Plone Site is created.

- Implement tours
  12 tours are written, only tours marked with a cross are implemented:
  [X] Tour 1: Add and publish a Folder
  [X] Tour 2: Add and publish a Page
  [X] Tour 3: Add and publish a News Item
  [X] Tour 4: Add an publish an Event
  [X] Tour 5: Format a page using the visual editor
  [X] Tour 6.1: Create internal link
  [X] Tour 6.2: Create internal external link
  [X] Tour 7: Upload an image
  [X] Tour 8: Insert image on a page
  [ ] Tour 9: Upload and link to a File
  [ ] Tour 10: Using the Contents tab
  [X] Tour 11: Using the Display menu
  [ ] Tour 12: Create a static text portlet

- Check the entered texts: check if the texts entered in the fields are the ones we expected.
  If not we may have problems with ids (in the url) and with the xcontent.
  Otherwise, let both url and xcontent be function of what the user entered.

- activate the prev/next buttons just only they have a real meaning. 
  e.g. after publishing, going to the previous step cannot bring the object to a private state. 
  it's better to disable the previous step button.
  viceversa, when you are just having a overview (e.g. the tour 10) prev and next buttons are 
  useful.

- translate javascript messages and plone's interface parts referring 

- fix problem when submitting forms with contents inside the kupu editor

Needed documentation changes
----------------------------

Documentation should describe:
 - the new option --with-tours for the unified installer.
 - how to create a tour
 - how to use advanced features (e.g. aj_any_url)


i18n
----

The collective.amberjack eggs are fully internationalized.
A message was sent to plone-i18n mailing-list so translators can translate the following files:
https://svn.plone.org/svn/collective/collective.amberjack.core/trunk/collective/amberjack/core/locales/collective.amberjack.core.pot
https://svn.plone.org/svn/collective/collective.amberjack.metatour/trunk/collective/amberjack/metatour/locales/collective.amberjack.metatour.pot
https://svn.plone.org/svn/collective/collective.amberjack.portlet/trunk/collective/amberjack/portlet/locales/collective.amberjack.portlet.pot
https://svn.plone.org/svn/collective/collective.amberjack.portlet/trunk/collective/amberjack/portlet/i18n/collective.amberjack.portlet-plone.pot
https://svn.plone.org/svn/collective/collective.amberjack.plonetour/trunk/collective/amberjack/plonetour/locales/collective.amberjack.plonetour.pot


Backwards compatibility
-----------------------

All the collective.amberjack eggs works on Plone 3.2.3, 3.3 and 4.0.
Plone 3.2.3 is the minimal version to run the tours written in
collective.amberjack.plonetour because since Archetypes >= 1.5.11
the Save button has name=form.button.save.
In Plone 3.2.2 with Archetypes 1.5.10, it's name=form_submit.


Further ideas
-------------

Related ideas that may be nice to incorporate into this plip.
 
- Check if the user completes the step: since every step is made by several
  microstep, provide a way to check if all of them has been completed before
  unloading the page and go to the next step. If not, ask him if he wants to let
  the browser to autocomplete the step.

- Clicking on next step button do all the microsteps of the current step.

- Load the js stuff only if the tour is running.

- setUp/tearDown. provide a way to create an environment in which the user
  runs his tours. explore possible security issues.

- Provide a way to create a tour using paster.

 
Credits
-------

Idea and initial discussion:
- Massimo Azzolini
- Nate Aune

Implementation:  
- Massimo Azzolini
- Giacomo Spettoli
- Vincent Fretin
- Sam Knox (tours writing)
- Steve McMahon (UnifiedInstaller)
- Andrew Mleczko
- Mirna Bagnolatti (tours implementation)

Special thanks:
- Israel Saeta PÃ©rez for testing and critics as beginner pov

