PLIP 9285: Show blocked portlets in management interface
=================================================================

This plip is ready for merge.

PLIP ticket: https://dev.plone.org/plone/ticket/9285

Answers to review questions are at the bottom.

To do
-----

- Didn't branch CMFPlone for this PLIP, so when merging, some CSS nees to be
  added to CMFPlone/skins/plone_styles/portlets.css.dtml. Something like:

    .blockedPortlet .portletHeader {
        border-color: &dtml-borderWidth; &dtml-borderStyle; &dtml-discreetColor;;
    }

    .blockedPortlet .portletBlockedMessage {
        color: &dtml-discreetColor;;
    }

  At the moment, to make it easier to review, an existing class 
  ('inheritedPortlet') and a style attribute are being used to distinguish 
  blocked portlets. Class 'hiddenStructure' is also used to hide the 
  accessibility message. Both must be removed after merging and better
  style should be added in CMFPlone.

- More unit tests. Add new unit tests for view EditPortletManagerRenderer.

- For global and inherited portlets, the edit link should only be shown if
  the user has permission to manage portlets on that specific context.
  Though, this will only be a problem if the user has manager permissions
  only in part of the site.

Summary of changes
------------------

- Changed the contextual portlet management screen to show all portlets 
  from global categories, identifying the portlets blocked categories.

- Changed the position of inherited portlets to be shown after the
  respective select box, making clear to which category they belong.

- Updated the portlet management description message according to the changes.

Needed documentation changes
----------------------------

- The Plone User Manual needs to be updated, more specifically the "Portlet
  Management" section:
  http://plone.org/documentation/manual/plone-3-user-manual/portlet-management/

Backwards compatibility
-----------------------

This PLIP includes essentially presentational improvements. The changes made 
aren't expected to break existing functionality in any way.


Credits
-------

Ricardo Alves
