Status
------

I tried checking "Enable self-registration" and "Let users select
their own passwords" in the "Security" control panel and then
registering a new user but I got an unhelpful validation error.  I
also got this same error from the "Add New User" button in the "Users
Overview" control panel:

  Error: REQUEST

Also, some tests fail when this PLIP is deployed that didn't fail with
plipbase.cfg.  See plips/plip9310-review-rossp-tests-diff.txt for the
differences.

Since I couldn't get it to work, I'm going to checkpoint my progress
with this review here.  I'll go more in depth if these issues are
fixed.  What I haven't completed thus far is a code review of the
branches or updating the coreloadtests to re-run the WriteHeavy load
tests to get a valid result.

I'm very much in favor of this PLIP being completed under it's current
approach since it reaps the rewards of some fairly low hanging fruit.
But obviously it needs to work.  If the implementer can get it
working, address the additional test failures, and address most of the
"Needs Work" bits below, I'd eagerly vote +1 on merging.  I am
concerned at how much work seems like is yet to be done.  I worry that
trying to get this work done this late in the game and then merging
would mean merging something that hasn't gotten sufficient care.

For now, I'm -1, but very reluctantly.

Working
-------

- control panel/configlet
- specifying the fields and order of fields
- the specified fields appear on the join_form

Needs Work
----------

- field help

The registration field selection field needs a much clearer
description/help.   What are the left vs right?  What do the up and
down arrows mean?  Anticipate that though it might seem obvious to
us, it's worth addressing for those for whom it might not be.

- configlet location

Can we put this under the settings tab of the users & groups control
panel since that's where admins would go to add members and it avoids
proliferating control panels with a single field form?

- default to current behavior

By default, the new form includes all fields which is different from
the current behavior.  For consistency's sake, can the default
reproduce current behavior, including order?

- portlets

The login portlet appears on the new join_form and doesn't on the
existing join_form.  I'd suggest its not enough to just block that one
portlet or something else to special-case it.  Can you determine what
the portlets behavior is for the existing join_form and ensure the
same behavior for the new one?

- existing/old join_form

The old join_form skin object is still around but doesn't work.
Specifically, the registered.pt skin object has been changed to expect
form.username (and other keys) in the request, wheras the old
join_form just uses username.  If we're keeping the old join_form
around for backwards compatibility with sites that customized, then we
should make sure it still works.  It seems this would mean using
different registered.pt and any other view/templates so that the
existing join_form stack will still work.

I'm of two minds on this.  OTOH, Plone 4.0 is allowed to break
backwards compatibility so the extra complexity of having two
join_form flows begins to seem like it's not worth it.  OTOH, I'd love
to see the *new* join_form flow not use *any* skin objects which would
be one way to preserve the old join_form flow alongside the new one
without much trouble.

Notes
-----

- plone.app.memberschema

This is a question raised earlier that was never answered.  But on
further thought, without dexterity's TTW schemata, it's not much use
for the purpose of this PLIP.  This will give site admins customizable
reg forms with their exiting portal_memberdata props.

- authenticator

It looks like this PLIP branches plone.app.form to add the
authenticator stuff.  Not being totally up to speed on the
authenticator stuff, I'd like to have someone else's perspective on
whether this is appropriate:
https://dev.plone.org/plone/changeset/28754.
