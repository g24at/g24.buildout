PLIP 9250: JQuery Tools Integration
===================================

PLIP ticket: https://dev.plone.org/plone/ticket/9250

Review #2 by Rob Gietema (rob@fourdigits.nl, Rob|4D on irc)

The PLIP was reviewed on Mac OS X 10.5.8 using python 2.6.1 and Firefox 3.5.2.


Review steps
------------

- Run buildout using the plip9250-jqtools-integration.cfg file.

- Run tests for Products.CMFPlone.

- Visual review of the code changes in Products.CMFPlone.

- Run tests for plone.app.jqtools.

- Visual review of the code in plone.app.jqtools.

- Started instance, create new Plone Site, logged in, set default editor to
  basic html textarea, disabled safe_html transform so javascript doesn't get
  removed.

- Tested all 33 examples on http://flowplayer.org/demos/index.html in the
  categories: Tabs, Tooltips, Expose, Overlay and Scrollable.


Notes and observations
----------------------

- Products.CMFPlone tests finished with 3 failures and 1 error. Checkout of
  original revision used for branching (28432) lead to the same failures and
  error so these don't seem to be related to the changes made.

- Code changes to Products.CMFPlone all look sane.

- plone.app.jqtools tests finished with 0 failures and 0 errors.

- The naming of the package (plone.app.jqtools) doesn't seem to be consistant
  with other packages in the plone repository. I suggest using
  "plone.app.jquerytools" following the convention used in all jquery packages
  in the collective (collective.jquery<pluginname>).

- The javascript resource is named "plone.app.jqtools.js". All other javascript
  files in Plone at the moment use the original javascript filename and don't
  include the package name. Looking at plone.app.javascript the "new" way of
  naming is: "<packagename>.<fullname>". I suggest doing the same and naming the
  javascript file "plone.app.jquerytools.jquery.tools.js".

- There are no javascript tests available for jQuery Tools as far as I can tell
  so I couldn't run those. I also couldn't find out if a public version control
  system is used to maintain the code. Can you clarify if both assumptions are
  correct?

- The code changes made to jquery.tools.min.js all look sane.

- All tested examples worked.

- Looking at the current javascript functionality used in Plone the only thing
  which can be replaced using jQuery Tools are the tabs. It would be nice if we
  used at least one of the features of jQuery Tools to show add-on developpers
  we use it for Plone itself. Can the current tabs be replaced with the jQuery
  Tools tabs?


Conclusion
----------

Apart from the naming issues this plip seems fine. It would also be nice if
the Plone tabs are replaced by a jQuery Tools implementation. If these issues
are fixed I am +1 on merging.
