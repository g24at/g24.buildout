# To test Deco with Plone 4, do the following:
# 
# - make sure you have the latest code (svn up, ./bin/develop up)
# - run ./bin/buildout -c deco.cfg
# - Start the instance, create a new site with just the Sunburst theme as Add-on
# - Install the "Example Deco content" product using the Quickinstaller or 
#   Control Panel
# - Set the wysiwyg editor for the user to "Basic HTML texturea"
# - Go to the front page and add any visible portlet to the right column (a
#   calendar or recent portlet for example)
# - Go to the front page of the site and add an "Example Deco Page"
# - Add a title in the Default tab
# - In the layout field in the layout tab add the content of 
#   src/example.deco/example/deco/content/example.html
# - Click the edit button and then Deco should appear.
# 
# Since the labels for the field tiles are always at the left at the moment they
# won't be visible for the leftmost tiles. If this bothers you, uncomment the
# section that gives you a fixed-width layout in ploneCustom.css (in Sunburst)

[buildout]
extends =
    dexterity.cfg
parts +=
    lxml
    omelette
auto-checkout +=
    
    plone.app.tinymce
    
    plone.formwidget.layout
    plone.layoutbehavior
    plone.app.deco
    example.deco
    
    plone.registry
    plone.app.registry
    
    plone.tiles
    plone.app.tiles
    plone.directives.tiles
    
    repoze.xmliter
    plone.transformchain
    plone.app.blocks
    
    example.dexterity
    
    plone.z3cform

[versions]
lxml = 2.2.4

[instance]
eggs +=
    example.deco
    plone.app.tiles
    plone.directives.tiles
    plone.app.blocks

zcml +=
    plonetheme.sunburst
    plone.app.tiles
    plone.directives.tiles
    plone.app.blocks

[sources]
plone.app.tinymce                 = svn https://svn.plone.org/svn/plone/sandbox/plone.app.tinymce/trunk

plone.formwidget.layout           = svn https://svn.plone.org/svn/plone/sandbox/plone.formwidget.layout/trunk
plone.layoutbehavior              = svn https://svn.plone.org/svn/plone/sandbox/plone.layoutbehavior/trunk
plone.app.deco                    = svn https://svn.plone.org/svn/plone/sandbox/plone.app.deco/trunk
example.deco                      = svn https://svn.plone.org/svn/collective/example.deco/trunk

plone.registry                    = svn https://svn.plone.org/svn/plone/plone.registry/trunk
plone.app.registry                = svn https://svn.plone.org/svn/plone/plone.app.registry/trunk

plone.tiles                       = svn https://svn.plone.org/svn/plone/plone.tiles/trunk
plone.directives.tiles            = svn https://svn.plone.org/svn/plone/plone.directives.tiles/trunk
plone.app.tiles                   = svn https://svn.plone.org/svn/plone/plone.app.tiles/trunk

example.dexterity                 = svn https://svn.plone.org/svn/collective/example.dexterity/trunk

repoze.xmliter                    = svn svn+ssh://repoze@svn.repoze.org/svn/repoze.xmliter/trunk
plone.transformchain              = svn https://svn.plone.org/svn/plone/plone.transformchain/trunk
plone.app.blocks                  = svn https://svn.plone.org/svn/plone/plone.app.blocks/trunk


[test]
eggs +=
    plone.app.tinymce
    
    plone.formwidget.layout
    plone.layoutbehavior
    plone.app.deco
    example.deco
    
    plone.tiles
    plone.directives.tiles
    plone.app.tiles [test]
    
    plone.transformchain
    plone.app.blocks
    
    plone.app.deco
    example.deco

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml == ${versions:lxml}
